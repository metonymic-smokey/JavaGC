/*
Copyright (c) 2014, 2015, 2016, 2017, dynatrace and/or its affiliates. All rights reserved.
This file is part of the AntTracks Tool.

This code is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License version 2 only, as
published by the Free Software Foundation.

This code is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
version 2 for more details (a copy is included in the LICENSE file that
accompanied this code).

You should have received a copy of the GNU General Public License
along with with this work.  If not, see <http://www.gnu.org/licenses/>.
*/
package at.jku.anttracks.gui.frame.main.tab.fallback

import at.jku.anttracks.gui.component.actiontab.ActionTabAction
import at.jku.anttracks.gui.frame.main.GUI
import at.jku.anttracks.gui.frame.main.GUI.CLIENT_INFO
import at.jku.anttracks.gui.frame.main.component.applicationbase.IdeasEnabledTab
import at.jku.anttracks.gui.model.Description
import at.jku.anttracks.gui.model.Idea
import at.jku.anttracks.gui.utils.AppLoader
import at.jku.anttracks.gui.utils.Consts
import at.jku.anttracks.gui.utils.FXMLUtil
import javafx.beans.property.SimpleBooleanProperty
import javafx.beans.property.SimpleStringProperty
import javafx.fxml.FXML
import javafx.scene.control.Button
import org.controlsfx.control.PopOver

class FallbackTab : IdeasEnabledTab() {
    @FXML
    private lateinit var loadButton: Button

    override val componentDescriptions by lazy {
        listOf(Triple(loadButton,
                      Description("Load an AntTracks trace file to analyze it."),
                      PopOver.ArrowLocation.RIGHT_CENTER),
               Triple(CLIENT_INFO.mainFrame.mainTabbedPane.tabPanels,
                      Description("This is the tab panel.")
                              .linebreak()
                              .appendDefault("Use it to navigate around AntTracks and to keep track of your opened views."),
                      PopOver.ArrowLocation.LEFT_TOP),
               Triple(CLIENT_INFO.mainFrame.mainTabbedPane.actionPanels,
                      Description("This is the action panel.")
                              .linebreak()
                              .appendDefault("In here appear the main actions you can perform on the current tab."),
                      PopOver.ArrowLocation.BOTTOM_CENTER),
               Triple(CLIENT_INFO.mainFrame.statusPane, Description("This is the operations pane.")
                       .linebreak()
                       .appendDefault("All currently running tasks will indicate their progress here."),
                      PopOver.ArrowLocation.BOTTOM_CENTER),
               Triple(CLIENT_INFO.mainFrame.mainTabbedPane.ideasIcon.parent,
                      Description("We know that AntTracks can be quite confusing to use sometimes :(")
                              .linebreak()
                              .appendDefault("To make it easier for you we put this lightbulb here - when it turns on, AntTracks has some ideas for the current analysis that might help you.")
                              .linebreak()
                              .appendDefault("Simply hover the lightbulb to check them out!"),
                      PopOver.ArrowLocation.TOP_RIGHT))
    }

    override val defaultIdeas by lazy {
        listOf(Idea("Welcome to AntTracks!",
                    Description("In here, AntTracks will display ideas to help you during the analysis process.")
                            .linebreak()
                            .appendDefault("Get started by loading a ")
                            .appendEmphasized("trace file ")
                            .appendDefault("!")
                            .linebreak()
                            .appendDefault("Good luck!"),
                    listOf("Help, I'm lost!", "Who are you?"),
                    listOf({ showComponentDescriptions() },
                           { GUI.CLIENT_INFO.mainFrame.menuBar.showAbout() })))
    }

    init {
        FXMLUtil.load(this, FallbackTab::class.java)
    }

    fun init() {
        super.init(
                SimpleStringProperty("Welcome!"),
                SimpleStringProperty("Please load a trace file."),
                SimpleStringProperty("Please load a trace file. The trace file has to be located next to the symbols file and may be accompanied by a class definitions file."),
                Consts.ROCKET_ICON,
                listOf(
                        ActionTabAction("Load AntTracks trace file",
                                        "Load an AntTracks trace file for analysis",
                                        "Import",
                                        SimpleBooleanProperty(true),
                                        null,
                                        ::loadAntTracksTrace),
                        ActionTabAction("Load HPROF file (experimental)",
                                        "This feature is currently under construction. Load an HPROF file for analysis",
                                        "Import",
                                        SimpleBooleanProperty(true),
                                        null,
                                        ::loadHprofFile)),
                false)
    }

    fun loadAntTracksTrace() {
        AppLoader.load()
    }

    fun loadHprofFile() {
        AppLoader.loadHprof();
    }
}